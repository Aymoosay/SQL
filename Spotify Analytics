/* For this project, I downloaded Spotify data from Kaggle.
Then I created a table to insert Spotify data into.
Finally, I performed analytics on the data using SQL. */

/* Creating the table: */ 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

/* Then I inserted the Spotify Data .csv into the table. */

/* Next, I explored the data using the following SQL. */

/*What is the average danceability by artist?*/
SELECT artist_name, avg(danceability) AS danceability
FROM BIT_DB.Spotifydata
GROUP BY artist_name
Order By danceability desc;

/*Who are the Top 10 artists based on popularity?*/
SELECT artist_name, avg(popularity) AS popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name
order by popularity desc
limit 10;

/*What artist released the longest song?*/
SELECT artist_name, track_name, duration_ms AS Duration
FROM BIT_DB.Spotifydata
Order By Duration desc
LIMIT 1;

/*What is the average danceability for the top 10 most popular songs?*/
SELECT avg(danceability) AS Danceability
FROM BIT_DB.Spotifydata
order by popularity
limit 10;

/*For the top 10 most popular songs, does energy mean the song has more danceability?*/
SELECT track_name, artist_name, popularity, energy, avg(popularity*energy) AS PopEng
FROM BIT_DB.Spotifydata
group by track_name, artist_name, popularity, energy
order by PopEng desc, Popularity desc
limit 10;
